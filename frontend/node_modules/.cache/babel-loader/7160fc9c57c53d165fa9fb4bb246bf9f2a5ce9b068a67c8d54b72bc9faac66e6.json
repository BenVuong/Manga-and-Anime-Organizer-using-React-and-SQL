{"ast":null,"code":"const axios = require('axios');\nconst cheerio = require('cheerio');\nconst trace = '####';\nconst BASE_URL = `https://myanimelist.net/${trace}.php`;\nconst getProducers = type => {\n  return new Promise((resolve, reject) => {\n    axios.get(BASE_URL.replace(trace, type)).then(({\n      data\n    }) => {\n      const $ = cheerio.load(data);\n      const result = [];\n      $(`select[name=\"${type === 'anime' ? 'p' : 'mid'}\"] option`).each(function () {\n        result.push({\n          value: $(this).val(),\n          name: $(this).text().trim()\n        });\n      });\n      resolve(result);\n    }).catch(err => reject(err));\n  });\n};\nconst getGenres = type => {\n  return new Promise((resolve, reject) => {\n    axios.get(BASE_URL.replace(trace, type)).then(({\n      data\n    }) => {\n      const $ = cheerio.load(data);\n      const result = [];\n      $('#advancedSearch > .space_table > tbody > tr').each(function () {\n        $(this).find('td').each(function () {\n          const value = $(this).find('input').val();\n          const name = $(this).find('label').text().trim();\n          result.push({\n            value,\n            name\n          });\n        });\n      });\n      resolve(result);\n    }).catch(err => reject(err));\n  });\n};\nmodule.exports = {\n  getProducers,\n  getGenres,\n  producers: {\n    anime: require('./anime/producersList.json'),\n    manga: require('./manga/producersList.json')\n  },\n  genres: {\n    anime: require('./anime/genresList.json'),\n    manga: require('./manga/genresList.json')\n  }\n};","map":{"version":3,"names":["axios","require","cheerio","trace","BASE_URL","getProducers","type","Promise","resolve","reject","get","replace","then","data","$","load","result","each","push","value","val","name","text","trim","catch","err","getGenres","find","module","exports","producers","anime","manga","genres"],"sources":["C:/Users/elric/Desktop/reactsql/frontend/node_modules/mal-scraper/src/search/getLists.js"],"sourcesContent":["const axios = require('axios')\nconst cheerio = require('cheerio')\n\nconst trace = '####'\nconst BASE_URL = `https://myanimelist.net/${trace}.php`\n\nconst getProducers = (type) => {\n  return new Promise((resolve, reject) => {\n    axios.get(BASE_URL.replace(trace, type))\n      .then(({ data }) => {\n        const $ = cheerio.load(data)\n        const result = []\n\n        $(`select[name=\"${type === 'anime' ? 'p' : 'mid'}\"] option`).each(function () {\n          result.push({ value: $(this).val(), name: $(this).text().trim() })\n        })\n\n        resolve(result)\n      })\n      .catch((err) => reject(err))\n  })\n}\n\nconst getGenres = (type) => {\n  return new Promise((resolve, reject) => {\n    axios.get(BASE_URL.replace(trace, type))\n      .then(({ data }) => {\n        const $ = cheerio.load(data)\n        const result = []\n\n        $('#advancedSearch > .space_table > tbody > tr').each(function () {\n          $(this).find('td').each(function () {\n            const value = $(this).find('input').val()\n            const name = $(this).find('label').text().trim()\n\n            result.push({ value, name })\n          })\n        })\n\n        resolve(result)\n      })\n      .catch((err) => reject(err))\n  })\n}\n\nmodule.exports = {\n  getProducers,\n  getGenres,\n  producers: {\n    anime: require('./anime/producersList.json'),\n    manga: require('./manga/producersList.json')\n  },\n  genres: {\n    anime: require('./anime/genresList.json'),\n    manga: require('./manga/genresList.json')\n  }\n}\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAElC,MAAME,KAAK,GAAG,MAAM;AACpB,MAAMC,QAAQ,GAAI,2BAA0BD,KAAM,MAAK;AAEvD,MAAME,YAAY,GAAIC,IAAI,IAAK;EAC7B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCT,KAAK,CAACU,GAAG,CAACN,QAAQ,CAACO,OAAO,CAACR,KAAK,EAAEG,IAAI,CAAC,CAAC,CACrCM,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAK;MAClB,MAAMC,CAAC,GAAGZ,OAAO,CAACa,IAAI,CAACF,IAAI,CAAC;MAC5B,MAAMG,MAAM,GAAG,EAAE;MAEjBF,CAAC,CAAE,gBAAeR,IAAI,KAAK,OAAO,GAAG,GAAG,GAAG,KAAM,WAAU,CAAC,CAACW,IAAI,CAAC,YAAY;QAC5ED,MAAM,CAACE,IAAI,CAAC;UAAEC,KAAK,EAAEL,CAAC,CAAC,IAAI,CAAC,CAACM,GAAG,CAAC,CAAC;UAAEC,IAAI,EAAEP,CAAC,CAAC,IAAI,CAAC,CAACQ,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC;QAAE,CAAC,CAAC;MACpE,CAAC,CAAC;MAEFf,OAAO,CAACQ,MAAM,CAAC;IACjB,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAKhB,MAAM,CAACgB,GAAG,CAAC,CAAC;EAChC,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,SAAS,GAAIpB,IAAI,IAAK;EAC1B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCT,KAAK,CAACU,GAAG,CAACN,QAAQ,CAACO,OAAO,CAACR,KAAK,EAAEG,IAAI,CAAC,CAAC,CACrCM,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAK;MAClB,MAAMC,CAAC,GAAGZ,OAAO,CAACa,IAAI,CAACF,IAAI,CAAC;MAC5B,MAAMG,MAAM,GAAG,EAAE;MAEjBF,CAAC,CAAC,6CAA6C,CAAC,CAACG,IAAI,CAAC,YAAY;QAChEH,CAAC,CAAC,IAAI,CAAC,CAACa,IAAI,CAAC,IAAI,CAAC,CAACV,IAAI,CAAC,YAAY;UAClC,MAAME,KAAK,GAAGL,CAAC,CAAC,IAAI,CAAC,CAACa,IAAI,CAAC,OAAO,CAAC,CAACP,GAAG,CAAC,CAAC;UACzC,MAAMC,IAAI,GAAGP,CAAC,CAAC,IAAI,CAAC,CAACa,IAAI,CAAC,OAAO,CAAC,CAACL,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;UAEhDP,MAAM,CAACE,IAAI,CAAC;YAAEC,KAAK;YAAEE;UAAK,CAAC,CAAC;QAC9B,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFb,OAAO,CAACQ,MAAM,CAAC;IACjB,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAKhB,MAAM,CAACgB,GAAG,CAAC,CAAC;EAChC,CAAC,CAAC;AACJ,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAG;EACfxB,YAAY;EACZqB,SAAS;EACTI,SAAS,EAAE;IACTC,KAAK,EAAE9B,OAAO,CAAC,4BAA4B,CAAC;IAC5C+B,KAAK,EAAE/B,OAAO,CAAC,4BAA4B;EAC7C,CAAC;EACDgC,MAAM,EAAE;IACNF,KAAK,EAAE9B,OAAO,CAAC,yBAAyB,CAAC;IACzC+B,KAAK,EAAE/B,OAAO,CAAC,yBAAyB;EAC1C;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}