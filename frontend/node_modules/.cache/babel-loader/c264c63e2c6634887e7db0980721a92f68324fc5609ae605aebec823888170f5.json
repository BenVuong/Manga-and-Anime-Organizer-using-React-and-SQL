{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elric\\\\Desktop\\\\reactsql\\\\frontend\\\\src\\\\animeList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnimeList() {\n  _s();\n  const [anime, setAnime] = useState([]);\n  const [newAnimeName, setNewAnimeName] = useState('');\n  const [newEpsiodeCount, setNewEpisodeCount] = useState('');\n  const [newStatus, setNewStatus] = useState('');\n  const [editIndex, setEditIndex] = useState(null);\n  const statusOptions = [\"Watching\", \"Completed\", \"On-Hold\", \"Dropped\", \"Plan to Watch\"];\n  const statusChangeHandler = e => {\n    newNewStatus(e.target.value);\n  };\n  useEffect(() => {\n    const storedAnime = JSON.parse(localStorage.getItem('anime'));\n    if (storedAnime) {\n      setAnime(storedAnime);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('anime', JSON.stringify(anime));\n  }, [anime]);\n  const handleAddAnime = () => {\n    if (newAnimeName && newEpsiodeCount) {\n      if (editIndex === null) {\n        setAnime([...anime, {\n          name: newAnimeName,\n          episodeCount: newEpsiodeCount\n        }]);\n      } else {\n        const updatedAnime = [...anime];\n        updatedAnime[editIndex] = {\n          name: newAnimeName,\n          episodeCount: newEpsiodeCount\n        };\n        setAnime(updatedAnime);\n        setEditIndex(null);\n      }\n      setNewAnimeName('');\n      setNewEpisodeCount('');\n    }\n  };\n  const handleDeleteAnime = index => {\n    const updatedAnime = [...anime];\n    updatedAnime.splice(index, 1);\n    setAnime(updatedAnime);\n  };\n  const handleEditAnime = index => {\n    const animeToEdit = anime[index];\n    setNewAnimeName(animeToEdit.name);\n    setNewEpisodeCount(animeToEdit.episodeCount);\n    setEditIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Anime List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content  \",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn btn-success\",\n        children: \" Manga List \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Anime Name\",\n        value: newAnimeName,\n        onChange: e => setNewAnimeName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter episode count\",\n        value: newEpsiodeCount,\n        onChange: e => setNewEpisodeCount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: statusChangeHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" Select Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), statusOptions.map((option, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddAnime,\n        children: editIndex !== null ? 'Update Anime' : 'Add Anime'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: anime.map((animes, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [animes.name, \" - \", animes.episodeCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditAnime(index),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteAnime(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(AnimeList, \"VH+X42WkVINEldPY9/LBHKbb7Mk=\");\n_c = AnimeList;\nexport default AnimeList;\nvar _c;\n$RefreshReg$(_c, \"AnimeList\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","AnimeList","_s","anime","setAnime","newAnimeName","setNewAnimeName","newEpsiodeCount","setNewEpisodeCount","newStatus","setNewStatus","editIndex","setEditIndex","statusOptions","statusChangeHandler","e","newNewStatus","target","value","storedAnime","JSON","parse","localStorage","getItem","setItem","stringify","handleAddAnime","name","episodeCount","updatedAnime","handleDeleteAnime","index","splice","handleEditAnime","animeToEdit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","type","placeholder","onChange","map","option","onClick","animes","_c","$RefreshReg$"],"sources":["C:/Users/elric/Desktop/reactsql/frontend/src/animeList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nfunction AnimeList() {\r\n  const [anime, setAnime] = useState([]);\r\n  const [newAnimeName, setNewAnimeName] = useState('');\r\n  const [newEpsiodeCount, setNewEpisodeCount] = useState('');\r\n  const [newStatus, setNewStatus] = useState('')\r\n  const [editIndex, setEditIndex] = useState(null);\r\n\r\n  const statusOptions = [\r\n    \"Watching\",\r\n    \"Completed\",\r\n    \"On-Hold\",\r\n    \"Dropped\",\r\n    \"Plan to Watch\",\r\n  ];\r\n\r\n  const statusChangeHandler = (e) => {\r\n    newNewStatus(e.target.value);\r\n\r\n  }  \r\n\r\n  useEffect(() => {\r\n    const storedAnime = JSON.parse(localStorage.getItem('anime'));\r\n    if (storedAnime) {\r\n      setAnime(storedAnime);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('anime', JSON.stringify(anime));\r\n  }, [anime]);\r\n\r\n  const handleAddAnime = () => {\r\n    if (newAnimeName && newEpsiodeCount) {\r\n      if (editIndex === null) {\r\n        setAnime([...anime, { name: newAnimeName, episodeCount: newEpsiodeCount }]);\r\n      } else {\r\n        const updatedAnime = [...anime];\r\n        updatedAnime[editIndex] = {  name: newAnimeName, episodeCount: newEpsiodeCount };\r\n        setAnime(updatedAnime);\r\n        setEditIndex(null);\r\n      }\r\n      setNewAnimeName('');\r\n      setNewEpisodeCount('');\r\n    }\r\n  };\r\n\r\n  const handleDeleteAnime = (index) => {\r\n    const updatedAnime = [...anime];\r\n    updatedAnime.splice(index, 1);\r\n    setAnime(updatedAnime);\r\n  };\r\n\r\n  const handleEditAnime = (index) => {\r\n    const animeToEdit = anime[index];\r\n    setNewAnimeName(animeToEdit.name);\r\n    setNewEpisodeCount(animeToEdit.episodeCount);\r\n    setEditIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Anime List</h1>\r\n      <div className=\"d-flex justify-content  \">\r\n            <Link to =\"/\" className='btn btn-success'> Manga List </Link>\r\n        </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Anime Name\"\r\n          value={newAnimeName}\r\n          onChange={(e) => setNewAnimeName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Enter episode count\"\r\n          value={newEpsiodeCount}\r\n          onChange={(e) => setNewEpisodeCount(e.target.value)}\r\n        />\r\n        <select onChange={statusChangeHandler}>\r\n            <option> Select Status</option>\r\n            {statusOptions.map((option, index) =>\r\n            {\r\n              return(\r\n                <option key={index}>\r\n                  {option}\r\n                </option>\r\n              );\r\n            })}\r\n        </select>\r\n        <button onClick={handleAddAnime}>{editIndex !== null ? 'Update Anime' : 'Add Anime'}</button>\r\n      </div>\r\n      <ul>\r\n        {anime.map((animes, index) => (\r\n          <li key={index}>\r\n            \r\n            <span>{animes.name} - {animes.episodeCount}</span>\r\n            <button onClick={() => handleEditAnime(index)}>Edit</button>\r\n            <button onClick={() => handleDeleteAnime(index)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnimeList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}