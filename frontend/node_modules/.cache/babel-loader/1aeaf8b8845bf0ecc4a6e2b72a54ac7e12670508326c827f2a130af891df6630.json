{"ast":null,"code":"const axios = require('axios');\nconst cheerio = require('cheerio');\nconst {\n  getResultsFromSearch\n} = require('./info.js');\nconst BASE_URI = 'https://myanimelist.net/anime/';\nconst parsePage = $ => {\n  const items = $('#content .js-picture-gallery img');\n  const result = [];\n  items.each(function () {\n    result.push({\n      imageLink: $(this).attr('data-src').trim()\n    });\n  });\n  return result;\n};\nconst searchPage = url => {\n  return new Promise((resolve, reject) => {\n    axios.get(url).then(({\n      data\n    }) => {\n      const $ = cheerio.load(data);\n      const res = parsePage($);\n      resolve(res);\n    }).catch( /* istanbul ignore next */err => reject(err));\n  });\n};\nconst getPicturesFromName = name => {\n  return new Promise((resolve, reject) => {\n    getResultsFromSearch(name).then(items => {\n      const {\n        url\n      } = items[0];\n      searchPage(`${encodeURI(url)}/pics`).then(data => resolve(data)).catch( /* istanbul ignore next */err => reject(err));\n    }).catch( /* istanbul ignore next */err => reject(err));\n  });\n};\nconst getPicturesFromNameAndId = (id, name) => {\n  return new Promise((resolve, reject) => {\n    searchPage(`${BASE_URI}${id}/${encodeURI(name)}/pics`).then(data => resolve(data)).catch( /* istanbul ignore next */err => reject(err));\n  });\n};\nconst getPictures = obj => {\n  return new Promise((resolve, reject) => {\n    if (!obj) {\n      reject(new Error('[Mal-Scraper]: No id nor name received.'));\n      return;\n    }\n    if (typeof obj === 'object' && !obj[0]) {\n      const {\n        id,\n        name\n      } = obj;\n      if (!id || !name || isNaN(+id) || typeof name !== 'string') {\n        reject(new Error('[Mal-Scraper]: Malformed input. ID or name is malformed or missing.'));\n        return;\n      }\n      getPicturesFromNameAndId(id, name).then(data => resolve(data)).catch( /* istanbul ignore next */err => reject(err));\n    } else {\n      getPicturesFromName(obj).then(data => resolve(data)).catch( /* istanbul ignore next */err => reject(err));\n    }\n  });\n};\nmodule.exports = {\n  getPictures\n};","map":{"version":3,"names":["axios","require","cheerio","getResultsFromSearch","BASE_URI","parsePage","$","items","result","each","push","imageLink","attr","trim","searchPage","url","Promise","resolve","reject","get","then","data","load","res","catch","err","getPicturesFromName","name","encodeURI","getPicturesFromNameAndId","id","getPictures","obj","Error","isNaN","module","exports"],"sources":["C:/Users/elric/Desktop/reactsql/frontend/node_modules/mal-scraper/src/pictures.js"],"sourcesContent":["const axios = require('axios')\nconst cheerio = require('cheerio')\nconst { getResultsFromSearch } = require('./info.js')\n\nconst BASE_URI = 'https://myanimelist.net/anime/'\n\nconst parsePage = ($) => {\n  const items = $('#content .js-picture-gallery img')\n  const result = []\n\n  items.each(function () {\n    result.push({\n      imageLink: $(this).attr('data-src').trim()\n    })\n  })\n\n  return result\n}\n\nconst searchPage = (url) => {\n  return new Promise((resolve, reject) => {\n    axios.get(url)\n      .then(({ data }) => {\n        const $ = cheerio.load(data)\n        const res = parsePage($)\n        resolve(res)\n      })\n      .catch(/* istanbul ignore next */(err) => reject(err))\n  })\n}\n\nconst getPicturesFromName = (name) => {\n  return new Promise((resolve, reject) => {\n    getResultsFromSearch(name)\n      .then((items) => {\n        const { url } = items[0]\n\n        searchPage(`${encodeURI(url)}/pics`)\n          .then((data) => resolve(data))\n          .catch(/* istanbul ignore next */(err) => reject(err))\n      })\n      .catch(/* istanbul ignore next */(err) => reject(err))\n  })\n}\n\nconst getPicturesFromNameAndId = (id, name) => {\n  return new Promise((resolve, reject) => {\n    searchPage(`${BASE_URI}${id}/${encodeURI(name)}/pics`)\n      .then((data) => resolve(data))\n      .catch(/* istanbul ignore next */(err) => reject(err))\n  })\n}\n\nconst getPictures = (obj) => {\n  return new Promise((resolve, reject) => {\n    if (!obj) {\n      reject(new Error('[Mal-Scraper]: No id nor name received.'))\n      return\n    }\n\n    if (typeof obj === 'object' && !obj[0]) {\n      const { id, name } = obj\n\n      if (!id || !name || isNaN(+id) || typeof name !== 'string') {\n        reject(new Error('[Mal-Scraper]: Malformed input. ID or name is malformed or missing.'))\n        return\n      }\n\n      getPicturesFromNameAndId(id, name)\n        .then((data) => resolve(data))\n        .catch(/* istanbul ignore next */(err) => reject(err))\n    } else {\n      getPicturesFromName(obj)\n        .then((data) => resolve(data))\n        .catch(/* istanbul ignore next */(err) => reject(err))\n    }\n  })\n}\n\nmodule.exports = {\n  getPictures\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}