{"ast":null,"code":"const axios = require('axios');\nconst cheerio = require('cheerio');\nconst {\n  getResultsFromSearch\n} = require('./info.js');\nconst BASE_URI = 'https://myanimelist.net/anime/';\nconst NUMBER_REVIEWS_BY_PAGE = 20;\nconst INITIAL_FIRST_PAGE_REVIEW = 1;\n\n/**\n* Return a formatter javascript date\n* @params malDate string a date in a string object\n* @return date The string parse to a date\n**/\nconst malDateToJsDate = malDate => {\n  return new Date(malDate);\n};\n\n/**\n* Return a formatted javascript number\n* @params malNumber string a number in a string object\n* @return number The string parse to a number\n**/\nconst malNumberToJsNumber = malNumber => {\n  return malNumber ? Number(malNumber) : 0;\n};\nconst parsePage = $ => {\n  const items = $('.borderDark');\n  const result = [];\n  items.each(function (elem) {\n    const notes = $(this).find('.spaceit.pt8 div');\n    const reviewMore = $(this).find('.spaceit.pt8 span');\n    // For presenting the review only without the notes\n    $(this).find('.spaceit.pt8 div').remove();\n    $(this).find('.spaceit.pt8 span').remove();\n    $(this).find('.spaceit.pt8 a.js-toggle-review-button').remove();\n    result.push({\n      author: $($(this).find('.spaceit td:nth-child(2) a')['0']).text().trim(),\n      date: malDateToJsDate($($(this).find('.spaceit .mb8 div')['0']).text().trim()),\n      seen: $(this).find('.spaceit .mb8 .lightLink').text().trim(),\n      overall: malNumberToJsNumber($(notes).find('tr:nth-child(1) td:nth-child(2)').text().trim()),\n      story: malNumberToJsNumber($(notes).find('tr:nth-child(2) td:nth-child(2)').text().trim()),\n      animation: malNumberToJsNumber($(notes).find('tr:nth-child(3) td:nth-child(2)').text().trim()),\n      sound: malNumberToJsNumber($(notes).find('tr:nth-child(4) td:nth-child(2)').text().trim()),\n      character: malNumberToJsNumber($(notes).find('tr:nth-child(5) td:nth-child(2)').text().trim()),\n      enjoyment: malNumberToJsNumber($(notes).find('tr:nth-child(6) td:nth-child(2)').text().trim()),\n      review: $(this).find('.spaceit.pt8').text().trim() + $(reviewMore).text().trim()\n    });\n  });\n  return result;\n};\nconst searchPage = (url, limit, skip, p, res = []) => {\n  return new Promise((resolve, reject) => {\n    axios.get(url, {\n      params: {\n        p\n      }\n    }).then(({\n      data\n    }) => {\n      const $ = cheerio.load(data);\n      const tmpRes = parsePage($);\n      res = res.concat(tmpRes);\n\n      // If there is some skip to do, we splice the first result of the first page\n      if (skip !== 0) {\n        res.splice(0, skip);\n        skip = 0;\n      }\n      if (res.length <= limit) {\n        p++;\n        searchPage(url, limit, skip, p, res).then(data => resolve(data)).catch( /* istanbul ignore next */err => reject(err));\n      } else {\n        // If our limit is under the number of result in the page, we remove the excess\n        if (res.length !== limit) {\n          const nbrElementToRemove = res.length - limit;\n          res.splice(-nbrElementToRemove, nbrElementToRemove);\n        }\n        resolve(res);\n      }\n    }).catch( /* istanbul ignore next */err => reject(err));\n  });\n};\nconst getReviewsFromName = (name, limit, skip, p) => {\n  return new Promise((resolve, reject) => {\n    getResultsFromSearch(name).then(items => {\n      const {\n        url\n      } = items[0];\n      searchPage(`${encodeURI(url)}/reviews`, limit, skip, p).then(data => resolve(data)).catch( /* istanbul ignore next */err => reject(err));\n    }).catch( /* istanbul ignore next */err => reject(err));\n  });\n};\nconst getReviewsFromNameAndId = (id, name, limit, skip, p) => {\n  return new Promise((resolve, reject) => {\n    searchPage(`${BASE_URI}${id}/${encodeURI(name)}/reviews`, limit, skip, p).then(data => resolve(data)).catch( /* istanbul ignore next */err => reject(err));\n  });\n};\n\n/**\n* Return the starting page of the query depending of the number of element to skip\n* @params skip number The number of element to skip\n* @return number page to start the query\n**/\nconst startingPage = skip => {\n  return skip !== 0 ? Math.floor(skip / NUMBER_REVIEWS_BY_PAGE) + 1 : INITIAL_FIRST_PAGE_REVIEW;\n};\n\n/**\n* Return the number of skip remaining after skipping x page\n* @params skip number Total number of skip of the call\n* @params p number Number of page to skip\n* @return number Number of skip remaining in the first page\n**/\nconst skipByPage = (skip, p) => {\n  return skip !== 0 ? Math.max(0, skip - (p - 1) * NUMBER_REVIEWS_BY_PAGE) : 0;\n};\nconst getReviewsList = obj => {\n  return new Promise((resolve, reject) => {\n    if (!obj || typeof obj !== 'object') {\n      reject(new Error('[Mal-Scraper]: No id nor name received.'));\n      return;\n    }\n    const {\n      id,\n      name,\n      limit\n    } = obj;\n    let skip = obj.skip ? obj.skip : 0;\n    if (obj.id && (!name || isNaN(+id)) || typeof name !== 'string') {\n      reject(new Error('[Mal-Scraper]: Malformed input. ID or name is malformed or missing.'));\n      return;\n    }\n    const p = startingPage(skip);\n    skip = skipByPage(skip, p);\n    if (obj.id) {\n      getReviewsFromNameAndId(id, name, limit, skip, p).then(data => resolve(data)).catch( /* istanbul ignore next */err => reject(err));\n    } else {\n      getReviewsFromName(name, limit, skip, p).then(data => resolve(data)).catch( /* istanbul ignore next */err => reject(err));\n    }\n  });\n};\nmodule.exports = {\n  getReviewsList\n};","map":{"version":3,"names":["axios","require","cheerio","getResultsFromSearch","BASE_URI","NUMBER_REVIEWS_BY_PAGE","INITIAL_FIRST_PAGE_REVIEW","malDateToJsDate","malDate","Date","malNumberToJsNumber","malNumber","Number","parsePage","$","items","result","each","elem","notes","find","reviewMore","remove","push","author","text","trim","date","seen","overall","story","animation","sound","character","enjoyment","review","searchPage","url","limit","skip","p","res","Promise","resolve","reject","get","params","then","data","load","tmpRes","concat","splice","length","catch","err","nbrElementToRemove","getReviewsFromName","name","encodeURI","getReviewsFromNameAndId","id","startingPage","Math","floor","skipByPage","max","getReviewsList","obj","Error","isNaN","module","exports"],"sources":["C:/Users/elric/Desktop/reactsql/frontend/node_modules/mal-scraper/src/reviews.js"],"sourcesContent":["const axios = require('axios')\nconst cheerio = require('cheerio')\nconst { getResultsFromSearch } = require('./info.js')\n\nconst BASE_URI = 'https://myanimelist.net/anime/'\nconst NUMBER_REVIEWS_BY_PAGE = 20\nconst INITIAL_FIRST_PAGE_REVIEW = 1\n\n/**\n* Return a formatter javascript date\n* @params malDate string a date in a string object\n* @return date The string parse to a date\n**/\nconst malDateToJsDate = (malDate) => {\n  return new Date(malDate)\n}\n\n/**\n* Return a formatted javascript number\n* @params malNumber string a number in a string object\n* @return number The string parse to a number\n**/\nconst malNumberToJsNumber = (malNumber) => {\n  return malNumber ? Number(malNumber) : 0\n}\n\nconst parsePage = ($) => {\n  const items = $('.borderDark')\n  const result = []\n\n  items.each(function (elem) {\n    const notes = $(this).find('.spaceit.pt8 div')\n    const reviewMore = $(this).find('.spaceit.pt8 span')\n    // For presenting the review only without the notes\n    $(this).find('.spaceit.pt8 div').remove()\n    $(this).find('.spaceit.pt8 span').remove()\n    $(this).find('.spaceit.pt8 a.js-toggle-review-button').remove()\n\n    result.push({\n      author: $($(this).find('.spaceit td:nth-child(2) a')['0']).text().trim(),\n      date: malDateToJsDate($($(this).find('.spaceit .mb8 div')['0']).text().trim()),\n      seen: $(this).find('.spaceit .mb8 .lightLink').text().trim(),\n      overall: malNumberToJsNumber($(notes).find('tr:nth-child(1) td:nth-child(2)').text().trim()),\n      story: malNumberToJsNumber($(notes).find('tr:nth-child(2) td:nth-child(2)').text().trim()),\n      animation: malNumberToJsNumber($(notes).find('tr:nth-child(3) td:nth-child(2)').text().trim()),\n      sound: malNumberToJsNumber($(notes).find('tr:nth-child(4) td:nth-child(2)').text().trim()),\n      character: malNumberToJsNumber($(notes).find('tr:nth-child(5) td:nth-child(2)').text().trim()),\n      enjoyment: malNumberToJsNumber($(notes).find('tr:nth-child(6) td:nth-child(2)').text().trim()),\n      review: $(this).find('.spaceit.pt8').text().trim() + $(reviewMore).text().trim()\n    })\n  })\n\n  return result\n}\n\nconst searchPage = (url, limit, skip, p, res = []) => {\n  return new Promise((resolve, reject) => {\n    axios.get(url, {\n      params: {\n        p\n      }\n    }).then(({ data }) => {\n      const $ = cheerio.load(data)\n\n      const tmpRes = parsePage($)\n      res = res.concat(tmpRes)\n\n      // If there is some skip to do, we splice the first result of the first page\n      if (skip !== 0) {\n        res.splice(0, skip)\n        skip = 0\n      }\n\n      if (res.length <= limit) {\n        p++\n        searchPage(url, limit, skip, p, res)\n          .then((data) => resolve(data))\n          .catch(/* istanbul ignore next */(err) => reject(err))\n      } else {\n        // If our limit is under the number of result in the page, we remove the excess\n        if (res.length !== limit) {\n          const nbrElementToRemove = res.length - limit\n          res.splice(-nbrElementToRemove, nbrElementToRemove)\n        }\n        resolve(res)\n      }\n    }).catch(/* istanbul ignore next */(err) => reject(err))\n  })\n}\n\nconst getReviewsFromName = (name, limit, skip, p) => {\n  return new Promise((resolve, reject) => {\n    getResultsFromSearch(name).then((items) => {\n      const { url } = items[0]\n\n      searchPage(`${encodeURI(url)}/reviews`, limit, skip, p)\n        .then((data) => resolve(data))\n        .catch(/* istanbul ignore next */(err) => reject(err))\n    }).catch(/* istanbul ignore next */(err) => reject(err))\n  })\n}\n\nconst getReviewsFromNameAndId = (id, name, limit, skip, p) => {\n  return new Promise((resolve, reject) => {\n    searchPage(`${BASE_URI}${id}/${encodeURI(name)}/reviews`, limit, skip, p)\n      .then((data) => resolve(data))\n      .catch(/* istanbul ignore next */(err) => reject(err))\n  })\n}\n\n/**\n* Return the starting page of the query depending of the number of element to skip\n* @params skip number The number of element to skip\n* @return number page to start the query\n**/\nconst startingPage = (skip) => {\n  return skip !== 0 ? Math.floor(skip / NUMBER_REVIEWS_BY_PAGE) + 1 : INITIAL_FIRST_PAGE_REVIEW\n}\n\n/**\n* Return the number of skip remaining after skipping x page\n* @params skip number Total number of skip of the call\n* @params p number Number of page to skip\n* @return number Number of skip remaining in the first page\n**/\nconst skipByPage = (skip, p) => {\n  return skip !== 0 ? Math.max(0, skip - ((p - 1) * NUMBER_REVIEWS_BY_PAGE)) : 0\n}\n\nconst getReviewsList = (obj) => {\n  return new Promise((resolve, reject) => {\n    if (!obj || typeof obj !== 'object') {\n      reject(new Error('[Mal-Scraper]: No id nor name received.'))\n      return\n    }\n    const { id, name, limit } = obj\n    let skip = obj.skip ? obj.skip : 0\n\n    if ((obj.id && (!name || isNaN(+id))) || typeof name !== 'string') {\n      reject(new Error('[Mal-Scraper]: Malformed input. ID or name is malformed or missing.'))\n      return\n    }\n\n    const p = startingPage(skip)\n    skip = skipByPage(skip, p)\n\n    if (obj.id) {\n      getReviewsFromNameAndId(id, name, limit, skip, p)\n        .then((data) => resolve(data))\n        .catch(/* istanbul ignore next */(err) => reject(err))\n    } else {\n      getReviewsFromName(name, limit, skip, p)\n        .then((data) => resolve(data))\n        .catch(/* istanbul ignore next */(err) => reject(err))\n    }\n  })\n}\n\nmodule.exports = {\n  getReviewsList\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}